apply plugin: "com.android.application"
// For Dagger2
apply plugin: "com.neenbedankt.android-apt"
// For Realm
apply plugin: "realm-android"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.innovatube.boilerplate"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"

    // Dagger2 dependencies
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    provided "javax.annotation:jsr250-api:1.0"

    // Setup Retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"

    // RxAndroid
    compile "io.reactivex:rxandroid:${rxAndroidVersion}"

    // Setup material dialog for supporting android < 5.0
    compile("com.afollestad.material-dialogs:core:${materialDialogVersion}") {
        transitive = true
    }

    // Setup facebook steho for browse Realm object
    compile "com.facebook.stetho:stetho:${stethoVersion}"
    compile "com.uphyca:stetho_realm:${stethoRealmVersion}"

    // ButterKnife setup
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    // Material DateTime Picker
    compile "com.wdullaer:materialdatetimepicker:${materialDatePicker}"


    testCompile "junit:junit:${jUnit4Version}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powerMockVersion}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockVersion}"

    androidTestCompile "com.google.dexmaker:dexmaker:${dexMakerVersion}"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:${dexMakerVersion}"
    androidTestCompile "com.android.support.test:runner:${testRunnerVersion}"
    androidTestCompile "com.android.support.test:rules:${testRunnerVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espressoVersion}") {
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
        exclude group: 'com.android.support'
    }
    androidTestCompile "com.github.fabioCollini:DaggerMock:${daggerMockVersion}"
    androidTestCompile "com.android.support:support-annotations:${supportLibraryVersion}"
}
