apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'deploygate'
// For JaCoCo coverage report
apply plugin: 'jacoco'
// For Sonarqube
apply plugin: 'org.sonarqube'
apply plugin: "io.gitlab.arturbosch.detekt"
//apply plugin: "io.gitlab.arturbosch.detekt"
//apply plugin: "org.jlleitschuh.gradle.ktlint"
apply from: '../gradle/findbugs.gradle'
apply from: '../gradle/ktlint.gradle'

sonarqube {
    properties {
        property 'sonar.host.url', 'http://jenkins.innovatube.com:8080'
        property 'sonar.login', 'admin'
        property 'sonar.password', 'admin'
        property 'sonar.projectKey', 'android-boilerplate'
        property 'sonar.projectName', 'android-boilerplate'
        property 'sonar.projectVersion', '1.0'
        property 'sonar.language', 'java'
        property 'sonar.sources', 'src/main/java'
        property 'sonar.tests', 'src/test/java'
        property 'sonar.java.binaries', 'build'
        property 'sonar.analysis.mode', 'publish'
        property 'sonar.github.oauth', '845ba4392348a0d45810a6498be0aea4952014f3'
        property 'sonar.github.repository', 'Innovatube/android-boilerplate'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.junit.reportPaths', 'build/test-results/testDebugUnitTest'
        property 'sonar.jacoco.reportPaths', 'build/jacoco/testDebugUnitTest.exec'
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.innovatube.boilerplate"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        def versionMajor = 0
        def versionMinor = 0
        def versionPatch = 1
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch * 1
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            debuggable true
            multiDexEnabled true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            multiDexEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug//todo release signing
        }
    }

    productFlavors {
        //todo fix app name and app icon
        dev {
            applicationIdSuffix ".dev"
        }
        stg {
            applicationIdSuffix ".stg"
        }
        prod {
        }
    }
    applicationVariants.all { variant ->
        copy {
            from "src/${variant.flavorName}"
            into "."
            include "google-services.json"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    android {
        lintOptions {
            xmlReport true
            abortOnError false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //implementation 'androidx.core:core-ktx:1.0.0'

    // Support Library
    implementation "androidx.appcompat:appcompat:1.1.0-alpha03"
    implementation "com.google.android.material:material:1.1.0-alpha04"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0-alpha03"
    implementation "androidx.exifinterface:exifinterface:1.1.0-alpha01"
    implementation "androidx.browser:browser:1.0.0"
    implementation "androidx.annotation:annotation:1.1.0-alpha02"
    implementation 'androidx.multidex:multidex:2.0.1'

    // DI
    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

    // Utility
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    // Network
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // View
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    // Debug
    implementation 'com.jakewharton.timber:timber:4.7.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "org.robolectric:robolectric:4.0.1"
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    testImplementation 'androidx.arch.core:core-testing:2.0.0'

    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    implementation "androidx.room:room-runtime:$rootProject.room_version"
    kapt "androidx.room:room-compiler:$rootProject.room_version"
    implementation "androidx.room:room-rxjava2:$rootProject.room_version"


    implementation "com.github.bumptech.glide:glide:${rootProject.glide_version}"
    kapt "com.github.bumptech.glide:compiler:${rootProject.glide_version}"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha03'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.1.0-alpha03'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'

    implementation "com.orhanobut:hawk:2.0.1"
    implementation 'com.github.clans:fab:1.6.4'

    //App Inspection Tool
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-core:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-attr:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-measurement:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-disk:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-recorder:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-phoenix:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-crash:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-shared-preferences:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-geiger-counter:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-timber:v$rootProject.hyperion_version"
    debugImplementation "com.github.Innovatube.Hyperion-Android:hyperion-build-config:v$rootProject.hyperion_version"

}

detekt {
    version = "1.0.0.RC8"
    profile("main") {
        input = "$projectDir"
        config = "$project.rootDir/app/detekt-config.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        output = "${project.buildDir}/reports/detekt"
        parallel = true
        disableDefaultRuleSets = false
    }
}
